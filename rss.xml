<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>FinanceData</title><link>https://financedata.github.com/</link><description>Automate financial data collection and analysis</description><atom:link type="application/rss+xml" href="https://financedata.github.com/rss.xml" rel="self"></atom:link><language>ko</language><lastBuildDate>Fri, 16 Jun 2017 16:31:02 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Python Basics for Data Science - PART 3</title><link>https://financedata.github.com/posts/python-basics-part-3.html</link><dc:creator>plusjune</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Python-Basics-for-Data-Science---PART-3"&gt;Python Basics for Data Science - PART 3&lt;a class="anchor-link" href="https://financedata.github.com/posts/python-basics-part-3.html#Python-Basics-for-Data-Science---PART-3"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;( 파이낸스 데이터 사이언스를 위한 파이썬 언어 기초 )&lt;/p&gt;
&lt;h4 id="자료구조:-리스트,-튜플,-딕셔너리"&gt;자료구조: 리스트, 튜플, 딕셔너리&lt;a class="anchor-link" href="https://financedata.github.com/posts/python-basics-part-3.html#%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0:-%EB%A6%AC%EC%8A%A4%ED%8A%B8,-%ED%8A%9C%ED%94%8C,-%EB%94%95%EC%85%94%EB%84%88%EB%A6%AC"&gt;¶&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;&lt;img width="300" src="http://i.imgur.com/tHmNhjm.png"&gt;&lt;/p&gt;
&lt;h5 id="2017-FinanceData-http://fb.com/financedata"&gt;2017 FinanceData &lt;a href="http://fb.com/financedata"&gt;http://fb.com/financedata&lt;/a&gt;&lt;a class="anchor-link" href="https://financedata.github.com/posts/python-basics-part-3.html#2017-FinanceData-http://fb.com/financedata"&gt;¶&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;&lt;a href="https://financedata.github.com/posts/python-basics-part-3.html"&gt;더 읽기…&lt;/a&gt; (읽기 3분 남음.)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>python</category><guid>https://financedata.github.com/posts/python-basics-part-3.html</guid><pubDate>Thu, 15 Jun 2017 21:45:10 GMT</pubDate></item><item><title>Python Basics for Data Science - PART 1</title><link>https://financedata.github.com/posts/python-basics-part-1.html</link><dc:creator>plusjune</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Python-Basics-for-Data-Science---PART-1"&gt;Python Basics for Data Science - PART 1&lt;a class="anchor-link" href="https://financedata.github.com/posts/python-basics-part-1.html#Python-Basics-for-Data-Science---PART-1"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;(파이낸스 데이터 사이언스를 위한 파이썬 언어 기초)&lt;/p&gt;
&lt;h4 id="주석,-변수와-값,-기본-데이터-타입,-타입-전환,-print()-출력"&gt;주석, 변수와 값, 기본 데이터 타입, 타입 전환, print() 출력&lt;a class="anchor-link" href="https://financedata.github.com/posts/python-basics-part-1.html#%EC%A3%BC%EC%84%9D,-%EB%B3%80%EC%88%98%EC%99%80-%EA%B0%92,-%EA%B8%B0%EB%B3%B8-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85,-%ED%83%80%EC%9E%85-%EC%A0%84%ED%99%98,-print()-%EC%B6%9C%EB%A0%A5"&gt;¶&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;&lt;img width="300" src="http://i.imgur.com/tHmNhjm.png"&gt;&lt;/p&gt;
&lt;h5 id="2017-FinanceData-http://fb.com/financedata"&gt;2017 FinanceData &lt;a href="http://fb.com/financedata"&gt;http://fb.com/financedata&lt;/a&gt;&lt;a class="anchor-link" href="https://financedata.github.com/posts/python-basics-part-1.html#2017-FinanceData-http://fb.com/financedata"&gt;¶&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;&lt;a href="https://financedata.github.com/posts/python-basics-part-1.html"&gt;더 읽기…&lt;/a&gt; (읽기 2분 남음.)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>python</category><guid>https://financedata.github.com/posts/python-basics-part-1.html</guid><pubDate>Thu, 15 Jun 2017 19:45:10 GMT</pubDate></item><item><title>Python Basics for Data Science - PART 2</title><link>https://financedata.github.com/posts/python-basics-part-2.html</link><dc:creator>plusjune</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Python-Basics-for-Data-Science---PART-2"&gt;Python Basics for Data Science - PART 2&lt;a class="anchor-link" href="https://financedata.github.com/posts/python-basics-part-2.html#Python-Basics-for-Data-Science---PART-2"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;( 파이낸스 데이터 사이언스를 위한 파이썬 언어 기초 )&lt;/p&gt;
&lt;h4 id="연산자,-문자열,-흐름-제어(if,-for,-while)"&gt;연산자, 문자열, 흐름 제어(if, for, while)&lt;a class="anchor-link" href="https://financedata.github.com/posts/python-basics-part-2.html#%EC%97%B0%EC%82%B0%EC%9E%90,-%EB%AC%B8%EC%9E%90%EC%97%B4,-%ED%9D%90%EB%A6%84-%EC%A0%9C%EC%96%B4(if,-for,-while)"&gt;¶&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;&lt;img width="300" src="http://i.imgur.com/tHmNhjm.png"&gt;&lt;/p&gt;
&lt;h5 id="2017-FinanceData-http://fb.com/financedata"&gt;2017 FinanceData &lt;a href="http://fb.com/financedata"&gt;http://fb.com/financedata&lt;/a&gt;&lt;a class="anchor-link" href="https://financedata.github.com/posts/python-basics-part-2.html#2017-FinanceData-http://fb.com/financedata"&gt;¶&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;&lt;a href="https://financedata.github.com/posts/python-basics-part-2.html"&gt;더 읽기…&lt;/a&gt; (읽기 4분 남음.)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>python</category><guid>https://financedata.github.com/posts/python-basics-part-2.html</guid><pubDate>Wed, 14 Jun 2017 20:45:10 GMT</pubDate></item><item><title>Jupyter Notebook 셀에서 값을 연속적으로 모두 출력하려면?</title><link>https://financedata.github.com/posts/display-all-values-in-cell-jupyter-notebook.html</link><dc:creator>plusjune</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="[FAQ]-Jupyter-Notebook에서-값을-연속적으로-출력하려면?"&gt;[FAQ] Jupyter Notebook에서 값을 연속적으로 출력하려면?&lt;a class="anchor-link" href="https://financedata.github.com/posts/display-all-values-in-cell-jupyter-notebook.html#%5BFAQ%5D-Jupyter-Notebook%EC%97%90%EC%84%9C-%EA%B0%92%EC%9D%84-%EC%97%B0%EC%86%8D%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%B6%9C%EB%A0%A5%ED%95%98%EB%A0%A4%EB%A9%B4?"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Q: Jupyter Notebook 셀에서 마지막 값 하나만이 아니라 중간에 모든 값을 차례로 출력하고 싶습니다.&lt;/li&gt;
&lt;li&gt;A: print(), IPython.display를 써서 매번 출력하거나 InteractiveShell의 옵션을 지정합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="http://i.imgur.com/tXzBmZX.png"&gt;&lt;/p&gt;
&lt;h5 id="2017-https://fb.com/financedata-,-https://financedata.github.io"&gt;2017 &lt;a href="https://fb.com/financedata"&gt;https://fb.com/financedata&lt;/a&gt; , &lt;a href="https://financedata.github.io"&gt;https://financedata.github.io&lt;/a&gt;&lt;a class="anchor-link" href="https://financedata.github.com/posts/display-all-values-in-cell-jupyter-notebook.html#2017-https://fb.com/financedata-,-https://financedata.github.io"&gt;¶&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;&lt;a href="https://financedata.github.com/posts/display-all-values-in-cell-jupyter-notebook.html"&gt;더 읽기…&lt;/a&gt; (읽기 1분 남음.)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>jupyter</category><category>notebook</category><category>python</category><guid>https://financedata.github.com/posts/display-all-values-in-cell-jupyter-notebook.html</guid><pubDate>Sat, 27 May 2017 01:40:11 GMT</pubDate></item><item><title>네이버 실시간 검색어 크롤링 (2줄) JSON 버전</title><link>https://financedata.github.com/posts/naver_realtime_search_json.html</link><dc:creator>plusjune</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="네이버-실시간-급상승-크롤링-02"&gt;네이버 실시간 급상승 크롤링 02&lt;a class="anchor-link" href="https://financedata.github.com/posts/naver_realtime_search_json.html#%EB%84%A4%EC%9D%B4%EB%B2%84-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EA%B8%89%EC%83%81%EC%8A%B9-%ED%81%AC%EB%A1%A4%EB%A7%81-02"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="http://naver.com"&gt;http://naver.com&lt;/a&gt;
&lt;img src="http://i.imgur.com/AJH8h1d.png"&gt;&lt;/p&gt;
&lt;p&gt;JSON 데이터를 받아 DataFrame으로 만들기 import 문을 제외하면 딱 2줄 !&lt;/p&gt;
&lt;h5 id="2017-https://fb.com/financedata"&gt;2017 &lt;a href="https://fb.com/financedata"&gt;https://fb.com/financedata&lt;/a&gt;&lt;a class="anchor-link" href="https://financedata.github.com/posts/naver_realtime_search_json.html#2017-https://fb.com/financedata"&gt;¶&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;&lt;a href="https://financedata.github.com/posts/naver_realtime_search_json.html"&gt;더 읽기…&lt;/a&gt; (읽기 1분 남음.)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>crawling</category><category>naver</category><category>re</category><category>regex</category><category>requests</category><guid>https://financedata.github.com/posts/naver_realtime_search_json.html</guid><pubDate>Wed, 03 May 2017 02:43:00 GMT</pubDate></item><item><title>네이버 실시간 검색어 크롤링 (1줄)</title><link>https://financedata.github.com/posts/naver_realtime_search_crawling.html</link><dc:creator>plusjune</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="네이버-실시간-급상승-크롤링"&gt;네이버 실시간 급상승 크롤링&lt;a class="anchor-link" href="https://financedata.github.com/posts/naver_realtime_search_crawling.html#%EB%84%A4%EC%9D%B4%EB%B2%84-%EC%8B%A4%EC%8B%9C%EA%B0%84-%EA%B8%89%EC%83%81%EC%8A%B9-%ED%81%AC%EB%A1%A4%EB%A7%81"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="http://naver.com"&gt;http://naver.com&lt;/a&gt;
&lt;img src="http://i.imgur.com/AJH8h1d.png"&gt;&lt;/p&gt;
&lt;p&gt;짧으면서 최대한 많은 의미를 담기 위한 Python 크롤링 코드. import 문을 제외하면 딱 1줄 !&lt;/p&gt;
&lt;h5 id="2017-https://fb.com/financedata"&gt;2017 &lt;a href="https://fb.com/financedata"&gt;https://fb.com/financedata&lt;/a&gt;&lt;a class="anchor-link" href="https://financedata.github.com/posts/naver_realtime_search_crawling.html#2017-https://fb.com/financedata"&gt;¶&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;&lt;a href="https://financedata.github.com/posts/naver_realtime_search_crawling.html"&gt;더 읽기…&lt;/a&gt; (읽기 1분 남음.)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>crawling</category><category>naver</category><category>re</category><category>regex</category><category>requests</category><guid>https://financedata.github.com/posts/naver_realtime_search_crawling.html</guid><pubDate>Tue, 02 May 2017 16:58:00 GMT</pubDate></item><item><title>pandas 출력 포맷팅</title><link>https://financedata.github.com/posts/pandas-display-format.html</link><dc:creator>plusjune</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="FAQ---pandas-출력-포맷팅"&gt;FAQ - pandas 출력 포맷팅&lt;a class="anchor-link" href="https://financedata.github.com/posts/pandas-display-format.html#FAQ---pandas-%EC%B6%9C%EB%A0%A5-%ED%8F%AC%EB%A7%B7%ED%8C%85"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Q: pandas 포맷팅 - 숫자에 e가 표시여부, 소수점 자리수 등을 지정하여 읽기 쉽게 하고자 합니다&lt;/li&gt;
&lt;li&gt;A: pd.set_option()으로 상세한 조정이 가능합니다&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id="2017-https://financedata.github.io"&gt;2017 &lt;a href="https://financedata.github.io"&gt;https://financedata.github.io&lt;/a&gt;&lt;a class="anchor-link" href="https://financedata.github.com/posts/pandas-display-format.html#2017-https://financedata.github.io"&gt;¶&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;&lt;a href="https://financedata.github.com/posts/pandas-display-format.html"&gt;더 읽기…&lt;/a&gt; (읽기 1분 남음.)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>display</category><category>format</category><category>pandas</category><guid>https://financedata.github.com/posts/pandas-display-format.html</guid><pubDate>Tue, 02 May 2017 05:45:16 GMT</pubDate></item><item><title>[FAQ] 전화번호부 사이트 크롤링</title><link>https://financedata.github.com/posts/phone-numbser-site-crawling.html</link><dc:creator>plusjune</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="전화번호부-사이트-크롤링"&gt;전화번호부 사이트 크롤링&lt;a class="anchor-link" href="https://financedata.github.com/posts/phone-numbser-site-crawling.html#%EC%A0%84%ED%99%94%EB%B2%88%ED%98%B8%EB%B6%80-%EC%82%AC%EC%9D%B4%ED%8A%B8-%ED%81%AC%EB%A1%A4%EB%A7%81"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;img src="http://www.isuperpage.co.kr/image/logo.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Q: 전화번호부 사이트를 검색하여 목록을 추출하고자 하는데, 데이터 전달이 되지 않습니다.&lt;/li&gt;
&lt;li&gt;A: 데이터를 인코딩 해주세요. 국내 사이트의 경우 종종 EUC-KR로 인코딩된 데이터만 수용하도록 설계된 경우가 있습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id="http://fb.com/financedata"&gt;&lt;a href="http://fb.com/financedata"&gt;http://fb.com/financedata&lt;/a&gt;&lt;a class="anchor-link" href="https://financedata.github.com/posts/phone-numbser-site-crawling.html#http://fb.com/financedata"&gt;¶&lt;/a&gt;&lt;/h5&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="전화번호부-사이트"&gt;전화번호부 사이트&lt;a class="anchor-link" href="https://financedata.github.com/posts/phone-numbser-site-crawling.html#%EC%A0%84%ED%99%94%EB%B2%88%ED%98%B8%EB%B6%80-%EC%82%AC%EC%9D%B4%ED%8A%B8"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href="http://www.isuperpage.co.kr"&gt;http://www.isuperpage.co.kr&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;지역과 범주를 입력하고 검색하면,
&lt;img src="http://i.imgur.com/jMesQJZ.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://financedata.github.com/posts/phone-numbser-site-crawling.html"&gt;더 읽기…&lt;/a&gt; (읽기 3분 남음.)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>crawling</category><category>encoding</category><category>numbser</category><category>phone</category><category>python</category><guid>https://financedata.github.com/posts/phone-numbser-site-crawling.html</guid><pubDate>Thu, 02 Mar 2017 04:00:16 GMT</pubDate></item><item><title>[FAQ] (Daum부동산) DataFrame 행 추출과 컬럼으로 합치기</title><link>https://financedata.github.com/posts/dataframe-extract-rows-and-concat-as-column.html</link><dc:creator>plusjune</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="[FAQ]-DataFrame-행(row)-정보를-추출하여-컬럼으로-합치기"&gt;[FAQ] DataFrame 행(row) 정보를 추출하여 컬럼으로 합치기&lt;a class="anchor-link" href="https://financedata.github.com/posts/dataframe-extract-rows-and-concat-as-column.html#%5BFAQ%5D-DataFrame-%ED%96%89(row)-%EC%A0%95%EB%B3%B4%EB%A5%BC-%EC%B6%94%EC%B6%9C%ED%95%98%EC%97%AC-%EC%BB%AC%EB%9F%BC%EC%9C%BC%EB%A1%9C-%ED%95%A9%EC%B9%98%EA%B8%B0"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;크롤링 데이터 가공과 결측치 처리 예제 (Daum 부동산 예제)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Q: DataFrame의 두 행(row)이 하나의 데이터를 이룹니다. 짝수 행의 데이터를 추출하여 컬럼으로 만드려면 어떻게 하나요?&lt;/li&gt;
&lt;li&gt;A: DataFrame.ix[] 인덱싱을 사용하여 짝수행 전체를 얻어 가공하고, pd.concat()을 이용여 합칠 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img width="320" src="http://i.imgur.com/9WYp6pK.png"&gt;&lt;/p&gt;
&lt;h5 id="http://fb.com/financedata"&gt;&lt;a href="http://fb.com/financedata"&gt;http://fb.com/financedata&lt;/a&gt;&lt;a class="anchor-link" href="https://financedata.github.com/posts/dataframe-extract-rows-and-concat-as-column.html#http://fb.com/financedata"&gt;¶&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;&lt;a href="https://financedata.github.com/posts/dataframe-extract-rows-and-concat-as-column.html"&gt;더 읽기…&lt;/a&gt; (읽기 7분 남음.)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>concat</category><category>dataframe</category><category>daum</category><category>dropna</category><category>faq</category><category>realestate</category><guid>https://financedata.github.com/posts/dataframe-extract-rows-and-concat-as-column.html</guid><pubDate>Wed, 01 Mar 2017 04:20:46 GMT</pubDate></item><item><title>네이버 파이낸스 - 재무제표 크롤링</title><link>https://financedata.github.com/posts/naver-finance-finstate-crawling.html</link><dc:creator>plusjune</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="네이버-파이낸스---재무제표-크롤링"&gt;네이버 파이낸스 - 재무제표 크롤링&lt;a class="anchor-link" href="https://financedata.github.com/posts/naver-finance-finstate-crawling.html#%EB%84%A4%EC%9D%B4%EB%B2%84-%ED%8C%8C%EC%9D%B4%EB%82%B8%EC%8A%A4---%EC%9E%AC%EB%AC%B4%EC%A0%9C%ED%91%9C-%ED%81%AC%EB%A1%A4%EB%A7%81"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;img src="http://i.imgur.com/9xZ5t2P.png"&gt;&lt;/p&gt;
&lt;h5 id="2016-이승준-fb.com/plusjune"&gt;2016 이승준 fb.com/plusjune&lt;a class="anchor-link" href="https://financedata.github.com/posts/naver-finance-finstate-crawling.html#2016-%EC%9D%B4%EC%8A%B9%EC%A4%80-fb.com/plusjune"&gt;¶&lt;/a&gt;&lt;/h5&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="네이버-파이낸스-크롤링"&gt;네이버 파이낸스 크롤링&lt;a class="anchor-link" href="https://financedata.github.com/posts/naver-finance-finstate-crawling.html#%EB%84%A4%EC%9D%B4%EB%B2%84-%ED%8C%8C%EC%9D%B4%EB%82%B8%EC%8A%A4-%ED%81%AC%EB%A1%A4%EB%A7%81"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;파이썬으로 데이터 크롤링 할 때 requests 와 BeautifulSoup 를 많이 사용한다. 표(table)로 정리된 데이터의 경우 pandas의 read_html()을 활용하면 간편하게 크롤링 할 수 있는 경우가 많다. 이 글에서는 네이버 파이낸스의 페이지 구조를 파악하고, 재무제표 정보를 pandas DataFrame으로 읽어 처리하는 방법을 살펴본다. &lt;/p&gt;&lt;p&gt;&lt;a href="https://financedata.github.com/posts/naver-finance-finstate-crawling.html"&gt;더 읽기…&lt;/a&gt; (읽기 7분 남음.)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>crawling</category><category>naver</category><guid>https://financedata.github.com/posts/naver-finance-finstate-crawling.html</guid><pubDate>Fri, 24 Feb 2017 17:30:35 GMT</pubDate></item></channel></rss>